{
	"info": {
		"_postman_id": "fd8aa089-2673-4f62-8db8-e22b4bc2fbc0",
		"name": "API DBSDER",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "13592912",
	},
	"item": [
		{
			"name": "PUT /decisions",
			"item": [
				{
					"name": "200 - Enregistre une décision",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"statusCode\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"message\", function(){",
									"    pm.expect(pm.response.json().message).to.eql(\"Decision créée\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{NORMALIZATION_API_KEY}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"decision\": {\n        \"_id\": \"idDecisionCC1106\",\n        \"analysis\": {\n            \"analyse\": [\n                \"someAnalyse\"\n            ],\n            \"doctrine\": \"someDoctrine\",\n            \"link\": \"someLink\",\n            \"reference\": [\n                \"someReference\"\n            ],\n            \"source\": \"TJ\",\n            \"summary\": \"someSummary\",\n            \"target\": \"someTarget\",\n            \"title\": [\n                \"someTitle\"\n            ]\n        },\n        \"appeals\": [\n            \"someAppeal\"\n        ],\n        \"chamberId\": \"someChamberId\",\n        \"chamberName\": \"someChamberName\",\n        \"dateCreation\": \"2023-06-11\",\n        \"dateDecision\": \"2023-06-10\",\n        \"decatt\": [\n            1,\n            2\n        ],\n        \"jurisdictionCode\": \"someJurisdictionCode\",\n        \"jurisdictionId\": \"someJurisdictionId\",\n        \"jurisdictionName\": \"someJurisdictionName\",\n        \"labelStatus\": \"toBeTreated\",\n        \"occultation\": {\n            \"additionalTerms\": \"someAdditionalTerms\",\n            \"categoriesToOmit\": [\n                \"someCategoriesToOmit\"\n            ]\n        },\n        \"originalText\": \"someOriginalText\",\n        \"registerNumber\": \"someRegisterNumber\",\n        \"solution\": \"someSolution\",\n        \"sourceId\": 1,\n        \"sourceName\": \"TJ\",\n        \"publication\": [\n            \"somePublication\"\n        ],\n        \"formation\": \"someFormation\",\n        \"blocOccultation\": 1,\n        \"NAOCode\": \"someNAOCode\",\n        \"natureAffaireCivil\": \"someNatureAffaireCivil\",\n        \"natureAffairePenal\": \"someNatureAffairePenal\",\n        \"codeMatiereCivil\": \"someCodeMatiereCivil\",\n        \"public\": true\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{HOSTNAME}}/{{VERSION}}/decisions"
					},
					"response": []
				},
				{
					"name": "400 - Enregistre une décision sans contenu",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"statusCode\", function(){",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"message\", function(){",
									"    pm.expect(pm.response.json().message).to.eql(\"Vous devez fournir le champ: decision\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{NORMALIZATION_API_KEY}}",
								"type": "default"
							}
						],
						"url": "{{HOSTNAME}}/{{VERSION}}/decisions"
					},
					"response": []
				},
				{
					"name": "400 - Enregistre une décision avec un contenu invalide",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"statusCode\", function(){",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"message\", function(){",
									"    pm.expect(pm.response.json().message).to.eql(\"Une ou plusieurs erreurs ont été trouvées sur les propriétés suivantes : _id\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{NORMALIZATION_API_KEY}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"decision\": {\n        \"analysis\": {\n            \"analyse\": [\n                \"someAnalyse\"\n            ],\n            \"doctrine\": \"someDoctrine\",\n            \"link\": \"someLink\",\n            \"reference\": [\n                \"someReference\"\n            ],\n            \"source\": \"someSource\",\n            \"summary\": \"someSummary\",\n            \"target\": \"someTarget\",\n            \"title\": [\n                \"someTitle\"\n            ]\n        },\n        \"appeals\": [\n            \"someAppeal\"\n        ],\n        \"chamberId\": \"someChamberId\",\n        \"chamberName\": \"someChamberName\",\n        \"dateCreation\": \"someDateCreation\",\n        \"dateDecision\": \"someDateDecision\",\n        \"decatt\": [\n            1,\n            2\n        ],\n        \"jurisdictionCode\": \"someJurisdictionCode\",\n        \"jurisdictionId\": \"someJurisdictionId\",\n        \"jurisdictionName\": \"someJurisdictionName\",\n        \"labelStatus\": \"toBeTreated\",\n        \"occultation\": {\n            \"additionalTerms\": \"someAdditionalTerms\",\n            \"categoriesToOmit\": [\n                \"someCategoriesToOmit\"\n            ]\n        },\n        \"originalText\": \"someOriginalText\",\n        \"registerNumber\": \"someRegisterNumber\",\n        \"solution\": \"someSolution\",\n        \"sourceId\": 1,\n        \"sourceName\": \"someSourceName\",\n        \"publication\": [\n            \"somePublication\"\n        ],\n        \"formation\": \"someFormation\",\n        \"blocOccultation\": 1,\n        \"NAOCode\": \"someNAOCode\",\n        \"natureAffaireCivil\": \"someNatureAffaireCivil\",\n        \"natureAffairePenal\": \"someNatureAffairePenal\",\n        \"codeMatiereCivil\": \"someCodeMatiereCivil\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{HOSTNAME}}/{{VERSION}}/decisions"
					},
					"response": []
				},
				{
					"name": "401 - Enregistre une décision sans apiKey",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"statusCode\", function(){",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"message\", function(){",
									"    pm.expect(pm.response.json().message).to.eql(\"Vous n'êtes pas autorisé à appeler cette route\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-api-key",
								"value": "",
								"type": "default",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"decision\": {\n        \"_id\": \"idDecisionCC1106\",\n        \"analysis\": {\n            \"analyse\": [\n                \"someAnalyse\"\n            ],\n            \"doctrine\": \"someDoctrine\",\n            \"link\": \"someLink\",\n            \"reference\": [\n                \"someReference\"\n            ],\n            \"source\": \"TJ\",\n            \"summary\": \"someSummary\",\n            \"target\": \"someTarget\",\n            \"title\": [\n                \"someTitle\"\n            ]\n        },\n        \"appeals\": [\n            \"someAppeal\"\n        ],\n        \"chamberId\": \"someChamberId\",\n        \"chamberName\": \"someChamberName\",\n        \"dateCreation\": \"2023-06-11\",\n        \"dateDecision\": \"2023-06-10\",\n        \"decatt\": [\n            1,\n            2\n        ],\n        \"jurisdictionCode\": \"someJurisdictionCode\",\n        \"jurisdictionId\": \"someJurisdictionId\",\n        \"jurisdictionName\": \"someJurisdictionName\",\n        \"labelStatus\": \"toBeTreated\",\n        \"occultation\": {\n            \"additionalTerms\": \"someAdditionalTerms\",\n            \"categoriesToOmit\": [\n                \"someCategoriesToOmit\"\n            ]\n        },\n        \"originalText\": \"someOriginalText\",\n        \"registerNumber\": \"someRegisterNumber\",\n        \"solution\": \"someSolution\",\n        \"sourceId\": 1,\n        \"sourceName\": \"TJ\",\n        \"publication\": [\n            \"somePublication\"\n        ],\n        \"formation\": \"someFormation\",\n        \"blocOccultation\": 1,\n        \"NAOCode\": \"someNAOCode\",\n        \"natureAffaireCivil\": \"someNatureAffaireCivil\",\n        \"natureAffairePenal\": \"someNatureAffairePenal\",\n        \"codeMatiereCivil\": \"someCodeMatiereCivil\",\n        \"public\": true\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{HOSTNAME}}/{{VERSION}}/decisions"
					},
					"response": []
				}
			]
		},
		{
			"name": "GET /decisions",
			"item": [
				{
					"name": "200 - Liste les décisions toBeTreated avec source et période",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"statusCode\", function(){",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{LABEL_API_KEY}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{HOSTNAME}}/{{VERSION}}/decisions?status=toBeTreated&source=CC&startDate=2023-06-11&endDate=2023-06-11",
							"host": [
								"{{HOSTNAME}}"
							],
							"path": [
								"{{VERSION}}",
								"decisions"
							],
							"query": [
								{
									"key": "status",
									"value": "toBeTreated"
								},
								{
									"key": "source",
									"value": "CC"
								},
								{
									"key": "startDate",
									"value": "2023-06-11"
								},
								{
									"key": "endDate",
									"value": "2023-06-11"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "400 - Liste decisions avec mauvais status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"statusCode\", function(){",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"message\", function(){",
									"    pm.expect(pm.response.json().message).to.eql(\"Une ou plusieurs erreurs ont été trouvées sur les propriétés suivantes : source, status, startDate, endDate\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{LABEL_API_KEY}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{HOSTNAME}}/{{VERSION}}/decisions?status=wrongStatus",
							"host": [
								"{{HOSTNAME}}"
							],
							"path": [
								"{{VERSION}}",
								"decisions"
							],
							"query": [
								{
									"key": "status",
									"value": "wrongStatus"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "401 - Liste les décisions sans API Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"statusCode\", function(){",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"message\", function(){",
									"    pm.expect(pm.response.json().message).to.eql(\"Vous n'êtes pas autorisé à appeler cette route\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{HOSTNAME}}/{{VERSION}}/decisions?status=toBeTreated",
							"host": [
								"{{HOSTNAME}}"
							],
							"path": [
								"{{VERSION}}",
								"decisions"
							],
							"query": [
								{
									"key": "status",
									"value": "toBeTreated"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "401 - Liste les décisions avec mauvaise API Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"statusCode\", function(){",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"message\", function(){",
									"    pm.expect(pm.response.json().message).to.eql(\"Vous n'êtes pas autorisé à appeler cette route\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "wrongApiKey",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{HOSTNAME}}/{{VERSION}}/decisions?status=toBeTreated",
							"host": [
								"{{HOSTNAME}}"
							],
							"path": [
								"{{VERSION}}",
								"decisions"
							],
							"query": [
								{
									"key": "status",
									"value": "toBeTreated"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GET /decisions/:id",
			"item": [
				{
					"name": "200 - Récupère une décision par son ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"statusCode\", function(){",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{LABEL_API_KEY}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{HOSTNAME}}/{{VERSION}}/decisions/:id",
							"host": [
								"{{HOSTNAME}}"
							],
							"path": [
								"{{VERSION}}",
								"decisions",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "idDecisionCC1106"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "404 - Récupère une décision avec son ID inexistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"statusCode\", function(){",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"message\", function(){",
									"    pm.expect(pm.response.json().message).to.eql(\"La decision n'a pas été trouvée\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{LABEL_API_KEY}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{HOSTNAME}}/{{VERSION}}/decisions/:id",
							"host": [
								"{{HOSTNAME}}"
							],
							"path": [
								"{{VERSION}}",
								"decisions",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "test"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PUT /decisions/:id/statut",
			"item": [
				{
					"name": "204 - Met à jour le statut d'une décision",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"statusCode\", function(){",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{LABEL_API_KEY}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statut\": \"loaded\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOSTNAME}}/{{VERSION}}/decisions/:id/statut",
							"host": [
								"{{HOSTNAME}}"
							],
							"path": [
								"{{VERSION}}",
								"decisions",
								":id",
								"statut"
							],
							"variable": [
								{
									"key": "id",
									"value": "idDecisionCC1106"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "400 - Met à jour le statut d'une décision avec un statut inexact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"statusCode\", function(){",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"message\", function(){",
									"    pm.expect(pm.response.json().message).to.eql(\"Validation failed (enum string is expected)\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{LABEL_API_KEY}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statut\": \"wrongStatus\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOSTNAME}}/{{VERSION}}/decisions/:id/statut",
							"host": [
								"{{HOSTNAME}}"
							],
							"path": [
								"{{VERSION}}",
								"decisions",
								":id",
								"statut"
							],
							"variable": [
								{
									"key": "id",
									"value": "idDecisionCC1106"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "401 - Met à jour avec une API Key inexistante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"statusCode\", function(){",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"message\", function(){",
									"    pm.expect(pm.response.json().message).to.eql(\"Vous n'êtes pas autorisé à appeler cette route\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-api-key",
								"value": "wrongAPIKey",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statut\": \"loaded\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOSTNAME}}/{{VERSION}}/decisions/:id/statut",
							"host": [
								"{{HOSTNAME}}"
							],
							"path": [
								"{{VERSION}}",
								"decisions",
								":id",
								"statut"
							],
							"variable": [
								{
									"key": "id",
									"value": "idDecisionCC1106"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "401 - Met à jour sans API Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"statusCode\", function(){",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"message\", function(){",
									"    pm.expect(pm.response.json().message).to.eql(\"Vous n'êtes pas autorisé à appeler cette route\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "default",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statut\": \"loaded\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOSTNAME}}/{{VERSION}}/decisions/:id/statut",
							"host": [
								"{{HOSTNAME}}"
							],
							"path": [
								"{{VERSION}}",
								"decisions",
								":id",
								"statut"
							],
							"variable": [
								{
									"key": "id",
									"value": "idDecisionCC1106"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "401 - Met à jour avec une API Key non autorisée",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"statusCode\", function(){",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"message\", function(){",
									"    pm.expect(pm.response.json().message).to.eql(\"Vous n'êtes pas autorisé à appeler cette route\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{OPS_API_KEY}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statut\": \"loaded\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOSTNAME}}/{{VERSION}}/decisions/:id/statut",
							"host": [
								"{{HOSTNAME}}"
							],
							"path": [
								"{{VERSION}}",
								"decisions",
								":id",
								"statut"
							],
							"variable": [
								{
									"key": "id",
									"value": "idDecisionCC1106"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "404 - Met à jour le statut d'une décision avec ID inexistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"statusCode\", function(){",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"message\", function(){",
									"    pm.expect(pm.response.json().message).to.eql(\"La decision n'a pas été trouvée\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{LABEL_API_KEY}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statut\": \"loaded\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOSTNAME}}/{{VERSION}}/decisions/:id/statut",
							"host": [
								"{{HOSTNAME}}"
							],
							"path": [
								"{{VERSION}}",
								"decisions",
								":id",
								"statut"
							],
							"variable": [
								{
									"key": "id",
									"value": "test"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PUT /decisions/:id/decision-pseudonymisee",
			"item": [
				{
					"name": "204 - Met à jour la décision pseudonymisée d'une décision",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"statusCode\", function(){",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{LABEL_API_KEY}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"decisionPseudonymisee\": \"contenu de la décision pseudonymisée\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOSTNAME}}/{{VERSION}}/decisions/:id/decision-pseudonymisee",
							"host": [
								"{{HOSTNAME}}"
							],
							"path": [
								"{{VERSION}}",
								"decisions",
								":id",
								"decision-pseudonymisee"
							],
							"variable": [
								{
									"key": "id",
									"value": "idDecisionCC1106"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "400 - Met à jour la décision pseudonymisée d'une décision avec un format incorrect",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"statusCode\", function(){",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"message\", function(){",
									"    pm.expect(pm.response.json().message).to.eql(\"decisionPseudonymisee must be a string\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{LABEL_API_KEY}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"decisionPseudonymisee\": 1234\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOSTNAME}}/{{VERSION}}/decisions/:id/decision-pseudonymisee",
							"host": [
								"{{HOSTNAME}}"
							],
							"path": [
								"{{VERSION}}",
								"decisions",
								":id",
								"decision-pseudonymisee"
							],
							"variable": [
								{
									"key": "id",
									"value": "idDecisionCC1106"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "401 - Met à jour avec une API Key inexistante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"statusCode\", function(){",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"message\", function(){",
									"    pm.expect(pm.response.json().message).to.eql(\"Vous n'êtes pas autorisé à appeler cette route\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-api-key",
								"value": "wrongAPIKey",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"decisionPseudonymisee\": \"contenu de la décision pseudonymisée\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOSTNAME}}/{{VERSION}}/decisions/:id/decision-pseudonymisee",
							"host": [
								"{{HOSTNAME}}"
							],
							"path": [
								"{{VERSION}}",
								"decisions",
								":id",
								"decision-pseudonymisee"
							],
							"variable": [
								{
									"key": "id",
									"value": "idDecisionCC1106"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "401 - Met à jour sans API Key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"statusCode\", function(){",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"message\", function(){",
									"    pm.expect(pm.response.json().message).to.eql(\"Vous n'êtes pas autorisé à appeler cette route\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "default",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"decisionPseudonymisee\": \"contenu de la décision pseudonymisée\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOSTNAME}}/{{VERSION}}/decisions/:id/decision-pseudonymisee",
							"host": [
								"{{HOSTNAME}}"
							],
							"path": [
								"{{VERSION}}",
								"decisions",
								":id",
								"decision-pseudonymisee"
							],
							"variable": [
								{
									"key": "id",
									"value": "idDecisionCC1106"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "401 - Met à jour avec une API Key non autorisée",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"statusCode\", function(){",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"message\", function(){",
									"    pm.expect(pm.response.json().message).to.eql(\"Vous n'êtes pas autorisé à appeler cette route\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{OPS_API_KEY}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"decisionPseudonymisee\": \"contenu de la décision pseudonymisée\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOSTNAME}}/{{VERSION}}/decisions/:id/decision-pseudonymisee",
							"host": [
								"{{HOSTNAME}}"
							],
							"path": [
								"{{VERSION}}",
								"decisions",
								":id",
								"decision-pseudonymisee"
							],
							"variable": [
								{
									"key": "id",
									"value": "idDecisionCC1106"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "404 - Met à jour la décision pseudonymisée d'une décision avec ID inexistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"statusCode\", function(){",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"message\", function(){",
									"    pm.expect(pm.response.json().message).to.eql(\"La decision n'a pas été trouvée\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{LABEL_API_KEY}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"decisionPseudonymisee\": \"contenu de la décision pseudonymisée\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOSTNAME}}/{{VERSION}}/decisions/:id/decision-pseudonymisee",
							"host": [
								"{{HOSTNAME}}"
							],
							"path": [
								"{{VERSION}}",
								"decisions",
								":id",
								"decision-pseudonymisee"
							],
							"variable": [
								{
									"key": "id",
									"value": "test"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PUT /decisions/:id/rapports-occultations",
			"item": [
				{
					"name": "204 - Met à jour les rapports d'occultations d'une décision",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"statusCode\", function(){",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{LABEL_API_KEY}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"rapportsOccultations\": [{\n        \"annotations\": [\n          {\n            \"category\": \"some-category\",\n            \"entityId\": \"some-entity-id\",\n            \"start\": 1,\n            \"text\": \"some-text\",\n            \"certaintyScore\": 80\n          }\n        ],\n        \"source\": \"some-source\",\n        \"order\": 1\n    }]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOSTNAME}}/{{VERSION}}/decisions/:id/rapports-occultations",
							"host": [
								"{{HOSTNAME}}"
							],
							"path": [
								"{{VERSION}}",
								"decisions",
								":id",
								"rapports-occultations"
							],
							"variable": [
								{
									"key": "id",
									"value": "idDecisionCC1106"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "400 - Met à jour les rapports d'occultations d'une décision avec un format incorrect",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{LABEL_API_KEY}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"rapportsOccultations\": [{\n        \"annotations\": [\n          {\n            \"category\": \"some-category\",\n            \"entityId\": \"some-entity-id\",\n            \"start\": 1,\n            \"text\": \"some-text\",\n            \"certaintyScore\": \"80\"\n          }\n        ],\n        \"order\": 1\n    }]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOSTNAME}}/{{VERSION}}/decisions/:id/rapports-occultations",
							"host": [
								"{{HOSTNAME}}"
							],
							"path": [
								"{{VERSION}}",
								"decisions",
								":id",
								"rapports-occultations"
							],
							"variable": [
								{
									"key": "id",
									"value": "idDecisionCC1106"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "401 - Met à jour avec une API Key inexistante",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-api-key",
								"value": "wrongAPIKey",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"rapportsOccultations\": [{\n        \"annotations\": [\n          {\n            \"category\": \"some-category\",\n            \"entityId\": \"some-entity-id\",\n            \"start\": 1,\n            \"text\": \"some-text\",\n            \"certaintyScore\": 80\n          }\n        ],\n        \"source\": \"some-source\",\n        \"order\": 1\n    }]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOSTNAME}}/{{VERSION}}/decisions/:id/rapports-occultations",
							"host": [
								"{{HOSTNAME}}"
							],
							"path": [
								"{{VERSION}}",
								"decisions",
								":id",
								"rapports-occultations"
							],
							"variable": [
								{
									"key": "id",
									"value": "idDecisionCC1106"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "401 - Met à jour sans API Key",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "default",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"rapportsOccultations\": [{\n        \"annotations\": [\n          {\n            \"category\": \"some-category\",\n            \"entityId\": \"some-entity-id\",\n            \"start\": 1,\n            \"text\": \"some-text\",\n            \"certaintyScore\": 80\n          }\n        ],\n        \"source\": \"some-source\",\n        \"order\": 1\n    }]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOSTNAME}}/{{VERSION}}/decisions/:id/rapports-occultations",
							"host": [
								"{{HOSTNAME}}"
							],
							"path": [
								"{{VERSION}}",
								"decisions",
								":id",
								"rapports-occultations"
							],
							"variable": [
								{
									"key": "id",
									"value": "idDecisionCC1106"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "401 - Met à jour avec une API Key non autorisée",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"statusCode\", function(){",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{OPS_API_KEY}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"rapportsOccultations\": [{\n        \"annotations\": [\n          {\n            \"category\": \"some-category\",\n            \"entityId\": \"some-entity-id\",\n            \"start\": 1,\n            \"text\": \"some-text\",\n            \"certaintyScore\": 80\n          }\n        ],\n        \"source\": \"some-source\",\n        \"order\": 1\n    }]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOSTNAME}}/{{VERSION}}/decisions/:id/rapports-occultations",
							"host": [
								"{{HOSTNAME}}"
							],
							"path": [
								"{{VERSION}}",
								"decisions",
								":id",
								"rapports-occultations"
							],
							"variable": [
								{
									"key": "id",
									"value": "idDecisionCC1106"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "404 - Met à jour les rapports d'occultations d'une décision avec ID inexistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"statusCode\", function(){",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"message\", function(){",
									"    pm.expect(pm.response.json().message).to.eql(\"La decision n'a pas été trouvée\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{LABEL_API_KEY}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"rapportsOccultations\": [{\n        \"annotations\": [\n          {\n            \"category\": \"some-category\",\n            \"entityId\": \"some-entity-id\",\n            \"start\": 1,\n            \"text\": \"some-text\",\n            \"certaintyScore\": 80\n          }\n        ],\n        \"source\": \"some-source\",\n        \"order\": 1\n    }]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOSTNAME}}/{{VERSION}}/decisions/:id/rapports-occultations",
							"host": [
								"{{HOSTNAME}}"
							],
							"path": [
								"{{VERSION}}",
								"decisions",
								":id",
								"rapports-occultations"
							],
							"variable": [
								{
									"key": "id",
									"value": "test"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "200 - Consulte l'état de l'API",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{OPS_API_KEY}}",
						"type": "default"
					}
				],
				"url": "{{HOSTNAME}}/{{VERSION}}/health"

			},
			"response": []
		},
		{
			"name": "Accède à la documentation",
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "{{DOC_PASSWORD}}",
						"username": "{{DOC_LOGIN}}"
					}
				},
				"method": "GET",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "default",
						"disabled": true
					}
				],
				"url": "{{HOSTNAME}}/doc-json"
			},
			"response": []
		}
	]
}